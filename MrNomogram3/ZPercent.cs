// Decompiled with JetBrains decompiler
// Type: MrNomogram.ZPercent
// Assembly: MrNomogram, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: D240C00C-4280-4DCF-93B4-1E740A09BF1A
// Assembly location: C:\Users\jdelosr\source\repos\MrNomogram\bin\MrNomogram.dll

namespace MrNomogram3
{
    public class ZPercent
    {
        private float[] rightHalf = new float[501]
        {
      0.5f,
      0.5039894f,
      0.5079783f,
      0.5119665f,
      0.5159534f,
      0.5199388f,
      0.5239222f,
      0.5279032f,
      0.5318814f,
      0.5358564f,
      0.5398278f,
      0.5437953f,
      0.5477584f,
      0.5517168f,
      0.55567f,
      0.5596177f,
      0.5635595f,
      0.5674949f,
      0.5714237f,
      0.5753454f,
      0.5792597f,
      0.5831662f,
      0.5870644f,
      0.5909541f,
      0.5948349f,
      0.5987063f,
      0.6025681f,
      0.6064199f,
      0.6102612f,
      0.6140919f,
      0.6179114f,
      0.6217195f,
      0.6255158f,
      0.6293f,
      0.6330717f,
      0.6368307f,
      0.6405764f,
      0.6443088f,
      0.6480273f,
      0.6517317f,
      0.6554217f,
      0.659097f,
      0.6627573f,
      0.6664022f,
      0.6700314f,
      0.6736448f,
      0.6772419f,
      0.6808225f,
      0.6843863f,
      0.6879331f,
      0.6914625f,
      0.6949743f,
      0.6984682f,
      0.701944f,
      0.7054015f,
      0.7088403f,
      0.7122603f,
      0.7156612f,
      0.7190427f,
      0.7224047f,
      0.7257469f,
      0.7290691f,
      0.7323711f,
      0.7356527f,
      0.7389137f,
      0.7421539f,
      0.7453731f,
      0.7485711f,
      0.7517478f,
      0.7549029f,
      0.7580363f,
      0.7611479f,
      0.7642375f,
      0.7673049f,
      0.77035f,
      0.7733726f,
      0.7763727f,
      0.7793501f,
      0.7823046f,
      0.7852361f,
      0.7881446f,
      0.7910299f,
      0.7938919f,
      0.7967306f,
      0.7995458f,
      0.8023375f,
      0.8051055f,
      0.8078498f,
      0.8105703f,
      0.8132671f,
      0.8159399f,
      0.8185887f,
      0.8212136f,
      0.8238145f,
      0.8263912f,
      0.8289439f,
      0.8314724f,
      0.8339768f,
      0.8364569f,
      0.8389129f,
      0.8413447f,
      0.8437524f,
      0.8461358f,
      0.848495f,
      0.85083f,
      0.8531409f,
      0.8554277f,
      0.8576903f,
      0.8599289f,
      0.8621434f,
      0.8643339f,
      0.8665005f,
      0.8686431f,
      0.8707619f,
      0.8728568f,
      0.8749281f,
      0.8769756f,
      0.8789995f,
      0.8809999f,
      0.8829768f,
      0.8849303f,
      0.8868606f,
      0.8887676f,
      0.8906514f,
      0.8925123f,
      0.8943502f,
      0.8961653f,
      0.8979577f,
      0.8997274f,
      0.9014747f,
      0.9031995f,
      0.9049021f,
      0.9065825f,
      0.9082409f,
      0.9098773f,
      0.911492f,
      0.913085f,
      0.9146565f,
      0.9162067f,
      0.9177356f,
      0.9192433f,
      0.9207302f,
      0.9221962f,
      0.9236415f,
      0.9250663f,
      0.9264707f,
      0.927855f,
      0.9292191f,
      0.9305634f,
      0.9318879f,
      0.9331928f,
      0.9344783f,
      0.9357445f,
      0.9369916f,
      0.9382198f,
      0.9394292f,
      0.9406201f,
      0.9417924f,
      0.9429466f,
      0.9440826f,
      0.9452007f,
      0.9463011f,
      0.9473839f,
      0.9484493f,
      0.9494974f,
      0.9505285f,
      0.9515428f,
      0.9525403f,
      0.9535213f,
      0.954486f,
      0.9554345f,
      0.9563671f,
      0.9572838f,
      0.9581849f,
      0.9590705f,
      0.9599408f,
      0.9607961f,
      0.9616364f,
      0.962462f,
      0.963273f,
      0.9640697f,
      0.9648521f,
      0.9656205f,
      0.966375f,
      0.9671159f,
      0.9678432f,
      0.9685572f,
      0.9692581f,
      0.969946f,
      0.970621f,
      0.9712834f,
      0.9719334f,
      0.9725711f,
      0.9731966f,
      0.9738102f,
      0.9744119f,
      0.9750021f,
      0.9755808f,
      0.9761482f,
      0.9767045f,
      0.9772499f,
      0.9777844f,
      0.9783083f,
      0.9788217f,
      0.9793248f,
      0.9798178f,
      0.9803007f,
      0.9807738f,
      0.9812372f,
      0.9816911f,
      0.9821356f,
      0.9825708f,
      0.982997f,
      0.9834142f,
      0.9838226f,
      0.9842224f,
      0.9846137f,
      0.9849966f,
      0.9853713f,
      0.9857379f,
      0.9860966f,
      0.9864474f,
      0.9867906f,
      0.9871263f,
      0.9874545f,
      0.9877755f,
      0.9880894f,
      0.9883962f,
      0.9886962f,
      0.9889893f,
      0.9892759f,
      0.9895559f,
      0.9898296f,
      0.9900969f,
      0.9903581f,
      0.9906133f,
      0.9908625f,
      0.991106f,
      0.9913437f,
      0.9915758f,
      0.9918025f,
      0.9920237f,
      0.9922397f,
      0.9924506f,
      0.9926564f,
      0.9928572f,
      0.9930531f,
      0.9932443f,
      0.9934309f,
      0.9936128f,
      0.9937903f,
      0.9939634f,
      0.9941323f,
      0.9942969f,
      0.9944574f,
      0.9946139f,
      0.9947664f,
      0.9949151f,
      0.99506f,
      0.9952012f,
      0.9953388f,
      0.9954729f,
      0.9956035f,
      0.9957308f,
      0.9958547f,
      0.9959754f,
      0.996093f,
      0.9962074f,
      0.9963189f,
      0.9964274f,
      0.996533f,
      0.9966358f,
      0.9967359f,
      0.9968333f,
      0.996928f,
      0.9970202f,
      0.9971099f,
      0.9971972f,
      0.9972821f,
      0.9973646f,
      0.9974449f,
      0.9975229f,
      0.9975988f,
      0.9976726f,
      0.9977443f,
      0.997814f,
      0.9978818f,
      0.9979476f,
      0.9980116f,
      0.9980738f,
      0.9981342f,
      0.9981929f,
      0.9982498f,
      0.9983052f,
      0.9983589f,
      0.9984111f,
      0.9984618f,
      0.998511f,
      0.9985588f,
      0.9986051f,
      0.9986501f,
      0.9986938f,
      0.9987361f,
      0.9987772f,
      0.9988171f,
      0.9988558f,
      0.9988933f,
      0.9989297f,
      0.998965f,
      0.9989992f,
      0.9990324f,
      0.9990646f,
      0.9990957f,
      0.999126f,
      0.9991553f,
      0.9991836f,
      0.9992112f,
      0.9992378f,
      0.9992636f,
      0.9992886f,
      0.9993129f,
      0.9993363f,
      0.999359f,
      0.999381f,
      0.9994024f,
      0.999423f,
      0.9994429f,
      0.9994623f,
      0.999481f,
      0.9994991f,
      0.9995166f,
      0.9995335f,
      0.9995499f,
      0.9995658f,
      0.9995811f,
      0.9995959f,
      0.9996103f,
      0.9996242f,
      0.9996376f,
      0.9996505f,
      0.9996631f,
      0.9996752f,
      0.9996869f,
      0.9996982f,
      0.9997091f,
      0.9997197f,
      0.9997299f,
      0.9997398f,
      0.9997493f,
      0.9997585f,
      0.9997674f,
      0.9997759f,
      0.9997842f,
      0.9997922f,
      0.9997999f,
      0.9998074f,
      0.9998146f,
      0.9998215f,
      0.9998282f,
      0.9998347f,
      0.9998409f,
      0.9998469f,
      0.9998527f,
      0.9998583f,
      0.9998637f,
      0.9998689f,
      0.9998739f,
      0.9998787f,
      0.9998834f,
      0.9998879f,
      0.9998922f,
      0.9998964f,
      0.9999004f,
      0.9999043f,
      0.999908f,
      0.9999116f,
      0.999915f,
      0.9999184f,
      0.9999216f,
      0.9999247f,
      0.9999277f,
      0.9999305f,
      0.9999333f,
      0.9999359f,
      0.9999385f,
      0.9999409f,
      0.9999433f,
      0.9999456f,
      0.9999478f,
      0.9999499f,
      0.9999519f,
      0.9999539f,
      0.9999557f,
      0.9999575f,
      0.9999593f,
      0.9999609f,
      0.9999625f,
      0.9999641f,
      0.9999655f,
      0.999967f,
      0.9999683f,
      0.9999696f,
      0.9999709f,
      0.9999721f,
      0.9999733f,
      0.9999744f,
      0.9999755f,
      0.9999765f,
      0.9999775f,
      0.9999784f,
      0.9999793f,
      0.9999802f,
      0.9999811f,
      0.9999819f,
      0.9999826f,
      0.9999834f,
      0.9999841f,
      0.9999848f,
      0.9999854f,
      0.9999861f,
      0.9999867f,
      0.9999872f,
      0.9999878f,
      0.9999883f,
      0.9999888f,
      0.9999893f,
      0.9999898f,
      0.9999902f,
      0.9999907f,
      0.9999911f,
      0.9999915f,
      0.9999918f,
      0.9999922f,
      0.9999925f,
      0.9999929f,
      0.9999932f,
      0.9999935f,
      0.9999938f,
      0.9999941f,
      0.9999943f,
      0.9999946f,
      0.9999948f,
      0.9999951f,
      0.9999953f,
      0.9999955f,
      0.9999957f,
      0.9999959f,
      0.9999961f,
      0.9999963f,
      0.9999964f,
      0.9999966f,
      0.9999968f,
      0.9999969f,
      0.9999971f,
      0.9999972f,
      0.9999973f,
      0.9999974f,
      0.9999976f,
      0.9999977f,
      0.9999978f,
      0.9999979f,
      0.999998f,
      0.9999981f,
      0.9999982f,
      0.9999983f,
      0.9999983f,
      0.9999984f,
      0.9999985f,
      0.9999986f,
      0.9999986f,
      0.9999987f,
      0.9999988f,
      0.9999988f,
      0.9999989f,
      0.9999989f,
      0.999999f,
      0.999999f,
      0.9999991f,
      0.9999991f,
      0.9999992f,
      0.9999992f,
      0.9999992f,
      0.9999993f,
      0.9999993f,
      0.9999994f,
      0.9999994f,
      0.9999994f,
      0.9999994f,
      0.9999995f,
      0.9999995f,
      0.9999995f,
      0.9999995f,
      0.9999996f,
      0.9999996f,
      0.9999996f,
      0.9999996f,
      0.9999996f,
      0.9999997f,
      0.9999997f,
      0.9999997f,
      0.9999997f
        };

        public int getPercentByZ(float z)
        {
            int index = (int)((double)z * 100.0 + 0.5);
            return (int)((index >= -500 ? (index < -500 || index >= 0 ? (index < 0 || index > 500 ? (index <= 500 ? 0.0 : (double)this.rightHalf[500]) : (double)this.rightHalf[index]) : (double)(1f - this.rightHalf[-1 * index])) : (double)(1f - this.rightHalf[500])) * 100.0 + 0.5);
        }

        public string padZero(int z)
        {
            if (z > 99)
                return "" + (object)z;
            if (z <= 99 && z > 9)
                return "0" + (object)z;
            if (z <= 9 && z > 0)
                return "00" + (object)z;
            return "000";
        }

        public string displayPercentile(int z)
        {
            string str1 = "" + (object)z;
            char[] charArray = str1.ToCharArray();
            int length = str1.Length;
            string str2 = "th";
            if (charArray[length - 1] == '1' && z != 11)
                str2 = "st";
            else if (charArray[length - 1] == '2' && z != 12)
                str2 = "nd";
            else if (charArray[length - 1] == '3' && z != 13)
                str2 = "rd";
            return str1 + str2;
        }
    }
}
